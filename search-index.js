var searchIndex = new Map(JSON.parse('[\
["fiat_shamir",{"t":"PGFKKPFIPPNNNNNNNNNNNNNNMHNNNMMMNNNNNNNNNNNHNNN","n":["Err","Error","FiatShamirTranscript","InteractiveProver","InteractiveVerifier","Ok","RandNums","Result","Serialization","SumCheck","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","fmt","fmt","from","from","from","from","from","g_1","generate_transcript","into","into","into","num_rounds","round","round","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_transcript","vzip","vzip","vzip"],"q":[[0,"fiat_shamir"],[47,"core::marker"],[48,"core::fmt"],[49,"sum_check_protocol"],[50,"ark_serialize::error"],[51,"alloc::vec"],[52,"ark_ff::fields"],[53,"core::error"],[54,"core::option"],[55,"alloc::string"],[56,"core::result"],[57,"core::any"]],"i":[13,0,0,0,0,13,0,0,5,5,14,3,5,14,3,5,3,5,5,14,3,5,5,5,10,0,14,3,5,10,10,17,5,5,14,3,5,14,3,5,14,3,5,0,14,3,5],"f":"``````````{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{d{f{c}}}}}ch}{{{b{j}}{b{dl}}}n}0{cc{}}0{A`j}{Abj}2{{{b{dAd}}}{{Aj{{Ah{Af}}}}}}{e{{Aj{Al}}}An{{Ad{c}}}}{ce{}{}}00{{{b{Ad}}}B`}{{{b{dAd}}B`c}{{Aj{{Ah{Af}}}}}{}}{{{b{dBb}}B`{b{{Bd{Af}}}}{b{de}}}{{Aj{Bf}}}An{{Bh{c}}}}{{{b{j}}}{{Bl{{b{Bj}}}}}}{{{b{c}}}Bn{}}{c{{C`{e}}}{}{}}00000{{{b{c}}}Cb{}}00{{Ale}{{Aj{Bf}}}An{{Bb{c{f{c}}}}}}888","D":"Bn","p":[[1,"reference"],[0,"mut"],[5,"RandNums",0],[10,"Copy",47],[6,"Error",0],[5,"Formatter",48],[8,"Result",48],[6,"Error",49],[6,"SerializationError",50],[10,"InteractiveProver",0],[1,"u8"],[5,"Vec",51],[8,"Result",0],[5,"FiatShamirTranscript",0],[10,"Field",52],[1,"usize"],[10,"InteractiveVerifier",0],[1,"slice"],[1,"bool"],[10,"RngF",49],[10,"Error",53],[6,"Option",54],[5,"String",55],[6,"Result",56],[5,"TypeId",57]],"r":[],"b":[[17,"impl-Debug-for-Error"],[18,"impl-Display-for-Error"],[21,"impl-From%3CError%3E-for-Error"],[22,"impl-From%3CSerializationError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgABAALAAgAFgABACEACgAtAAIA"}],\
["gkr_protocol",{"t":"PPGPPPFGPIPPPPFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNHNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOO","n":["Begin","Err","Error","FinalRoundMessage","FirstRound","Ok","Prover","ProverMessage","R","Result","RoundStarted","StartSumCheck","SumCheckProverMessage","SumCheckRoundResult","Verifier","VerifierMessage","WrongVerifierState","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_1","check_input","eq","equivalent","equivalent","final_random_point","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","line","new","new","receive_prover_msg","receive_verifier_msg","restrict_poly","round_msg","start_protocol","start_round","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","c_1","circuit_outputs","num_vars","p","p","q","round","r","res"],"q":[[0,"gkr_protocol"],[77,"gkr_protocol::ProverMessage"],[84,"gkr_protocol::VerifierMessage"],[86,"ark_ff::fields::fft_friendly"],[87,"core::cmp"],[88,"ark_ff::fields"],[89,"rand::rng"],[90,"core::fmt"],[91,"ark_poly::polynomial::univariate::sparse"],[92,"alloc::vec"],[93,"ark_poly::evaluations::multivariate::multilinear"],[94,"alloc::string"],[95,"core::result"],[96,"core::any"]],"i":[8,12,0,8,11,12,0,0,11,0,11,8,8,11,0,0,14,5,3,14,11,8,5,3,14,11,8,3,5,8,8,8,5,14,14,11,8,5,3,14,11,8,5,3,14,11,8,0,5,3,5,3,0,3,3,3,14,5,3,14,11,8,5,3,14,11,8,5,3,14,11,8,5,3,14,11,8,26,27,26,28,29,29,26,30,31],"f":"`````````````````{{{b{c}}}{{b{e}}}{}{}}0000{{{b{dc}}}{{b{de}}}{}{}}0000{{{b{{f{c}}}}}ch}{{{b{{j{c}}}}{b{{l{c}}}}}nh}{{{b{{A`{c}}}}{b{{A`{c}}}}}n{AbAd}}{{{b{c}}{b{e}}}n{}{}}0{{{b{d{j{c}}}}{b{de}}}{{Ah{{Af{c}}}}}hAj}{{{b{Al}}{b{dAn}}}B`}0{{{b{{Af{c}}}}{b{dAn}}}B`{BbAd}}{{{b{{A`{c}}}}{b{dAn}}}B`{BbAd}}{cc{}}0000{ce{}{}}0000{{{b{{l{c}}}}{b{{l{c}}}}}{{Bf{{Bd{c}}}}}Ad}``{{{b{d{j{c}}}}{A`{c}}{b{de}}}{{Ah{{Af{c}}}}}hAj}{{{b{d{f{c}}}}{Af{c}}}Bhh}{{{b{{l{c}}}}{b{{l{c}}}}{b{e}}}{{Bd{c}}}Ad{{Bj{c}}}}{{{b{d{f{c}}}}Bl}{{A`{c}}}h}{{{b{{f{c}}}}}{{A`{c}}}h}{{{b{d{f{c}}}}Bl{b{{l{c}}}}}{{A`{c}}}h}{{{b{c}}}Bn{}}{c{{C`{e}}}{}{}}000000000{{{b{c}}}Cb{}}0000:::::`````````","D":"Fb","p":[[1,"reference"],[0,"mut"],[5,"Prover",0],[10,"FftField",86],[5,"Verifier",0],[1,"slice"],[1,"bool"],[6,"ProverMessage",0],[10,"PartialEq",87],[10,"Field",88],[6,"VerifierMessage",0],[8,"Result",0],[10,"Rng",89],[6,"Error",0],[5,"Formatter",90],[8,"Result",90],[10,"Debug",90],[5,"SparsePolynomial",91],[5,"Vec",92],[1,"unit"],[10,"MultilinearExtension",93],[1,"usize"],[5,"String",94],[6,"Result",95],[5,"TypeId",96],[15,"StartSumCheck",77],[15,"Begin",77],[15,"SumCheckProverMessage",77],[15,"FinalRoundMessage",77],[15,"R",84],[15,"SumCheckRoundResult",84]],"r":[],"b":[[33,"impl-Display-for-Error"],[34,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUABAASAAkAHgACACIAAwA5ABQA"}],\
["matrix_multiplication",{"t":"FNNNNNNNNNNNNNNNNNN","n":["G","borrow","borrow_mut","clone","clone_into","clone_to_uninit","evaluate","fix_variables","from","into","new","num_vars","to_evaluations","to_owned","to_univariate","try_from","try_into","type_id","vzip"],"q":[[0,"matrix_multiplication"],[19,"core::clone"],[20,"ark_ff::fields"],[21,"core::option"],[22,"ark_ff::fields::fft_friendly"],[23,"core::iter::traits::collect"],[24,"alloc::vec"],[25,"ark_poly::polynomial::univariate::sparse"],[26,"core::result"],[27,"core::any"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":"`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{f{c}}}}}{{f{c}}}{hj}}{{{b{c}}{b{de}}}l{}{}}{{{b{c}}}l{}}{{{b{{f{c}}}}{b{{n{c}}}}}{{A`{c}}}Ab}{{{b{{f{c}}}}{b{{n{c}}}}}{{f{c}}}Ab}{cc{}}{ce{}{}}{{Adee{b{{n{c}}}}}{{f{c}}}j{{Ah{}{{Af{c}}}}}}{{{b{{f{c}}}}}AdAb}{{{b{{f{c}}}}}{{Aj{c}}}Ab}{{{b{c}}}e{}{}}{{{b{{f{c}}}}}{{Al{c}}}Ab}{c{{An{e}}}{}{}}0{{{b{c}}}B`{}}7","D":"h","p":[[1,"reference"],[0,"mut"],[5,"G",0],[10,"Clone",19],[10,"Field",20],[1,"unit"],[1,"slice"],[6,"Option",21],[10,"FftField",22],[1,"usize"],[17,"Item"],[10,"IntoIterator",23],[5,"Vec",24],[5,"SparsePolynomial",25],[6,"Result",26],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8AAwAAAAAAAgAGAAwABwA="}],\
["multilinear_extensions",{"t":"HH","n":["cti_multilinear_from_evaluations","vsbw_multilinear_from_evaluations"],"q":[[0,"multilinear_extensions"],[2,"ark_ff::fields"]],"i":[0,0],"f":"{{{d{{b{c}}}}{d{{b{c}}}}}cf}0","D":"d","p":[[1,"slice"],[1,"reference"],[10,"Field",2]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["relaxed_pcs",{"t":"PPPGPKPPPFIPRFNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ArkCryptoPrimitivesError","DegreeMismatch","Err","Error","EvalMismatch","IF","NoProverPoly","Ok","PolyEvalDimMismatch","Prover","Result","ToBytesError","Values","Verifier","all_multidimentional_values","all_values","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","challenge","challenge_prover","commited_univariate","fmt","fmt","from","from","from","from","into","into","into","merkle_root","new","new","poly_restriction_to_line","random_line","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_prover_reply","vzip","vzip","vzip"],"q":[[0,"relaxed_pcs"],[54,"alloc::vec"],[55,"core::iter::traits::collect"],[56,"ark_crypto_primitives::merkle_tree"],[57,"ark_poly::evaluations::multivariate::multilinear"],[58,"ark_ff::fields"],[59,"rand::rng"],[60,"ark_poly::polynomial::univariate::sparse"],[61,"core::fmt"],[62,"ark_crypto_primitives"],[63,"core::error"],[64,"core::option"],[65,"alloc::string"],[66,"core::result"],[67,"core::any"]],"i":[21,21,12,0,21,0,21,12,21,0,0,21,3,0,3,3,16,9,21,16,9,21,9,16,16,21,21,16,9,21,21,16,9,21,9,16,9,9,16,21,21,16,9,21,16,9,21,16,9,21,16,16,9,21],"f":"``````````````{b{{h{{h{{f{}{{d{c}}}}}}}}}{{l{}{{j{}}}}}}{{}c{}}{{{n{c}}}{{n{e}}}{}{}}00{{{n{A`c}}}{{n{A`e}}}{}{}}00{{{n{{Ab{ceg}}}}{h{c}}}{{Ah{{Af{{Ad{g}}c}}}}}f{{Aj{c}}}{{An{}{{Al{c}}}}}}{{{n{A`{B`{ce}}}}{n{A`g}}}{{h{c}}}Bb{{An{}{{Al{c}}}}}Bd}{{{n{A`{B`{ce}}}}{Bf{c}}}{{Ah{Bh}}}Bb{{An{}{{Al{c}}}}}}{{{n{Bj}}{n{A`Bl}}}Bn}0{cc{}}0{C`Bj}1{ce{}{}}00{{{n{{Ab{ceg}}}}}{}f{{Aj{c}}}{{An{}{{Al{c}}}}}}{{bb}{{B`{ce}}}Bb{{An{}{{Al{c}}}}}}{e{{Ah{{Ab{ceg}}}}}f{{Aj{c}}}{{An{}{{Al{c}}}}}}{{{n{{Ab{ceg}}}}{n{{Cb{c}}}}{n{{Cb{c}}}}}{{Bf{c}}}f{{Aj{c}}}{{An{}{{Al{c}}}}}}{{{n{A`{B`{ce}}}}{n{A`g}}}{{Af{{h{c}}{h{c}}}}}Bb{{An{}{{Al{c}}}}}Bd}{{{n{Bj}}}{{Cf{{n{Cd}}}}}}{{{n{c}}}Ch{}}{c{{Cj{e}}}{}{}}00000{{{n{c}}}Cl{}}00{{{n{{B`{ce}}}}{Ad{e}}c}{{Ah{Bh}}}Bb{{An{}{{Al{c}}}}}}:::","D":"Cd","p":[[1,"usize"],[17,"Values"],[10,"IF",0],[5,"Vec",54],[17,"Item"],[10,"IntoIterator",55],[1,"reference"],[0,"mut"],[5,"Prover",0],[5,"Path",56],[1,"tuple"],[8,"Result",0],[10,"MultilinearExtension",57],[17,"Leaf"],[10,"Config",56],[5,"Verifier",0],[10,"Field",58],[10,"Rng",59],[5,"SparsePolynomial",60],[1,"unit"],[6,"Error",0],[5,"Formatter",61],[8,"Result",61],[8,"Error",62],[1,"slice"],[10,"Error",63],[6,"Option",64],[5,"String",65],[6,"Result",66],[5,"TypeId",67]],"r":[],"b":[[25,"impl-Display-for-Error"],[26,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABwACgABAAEABQAAAAcAAAAJAAAADAAAABEABQAaAAEAHgAAACgACgA0AAIA"}],\
["sum_check_protocol",{"t":"FGPPPFPKKFGNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNMNNNNMNMNNNNNNNNNNNNNNNNNNNN","n":["BooleanHypercube","Error","FinalRound","JthRound","NoPolySet","Prover","ProverClaimMismatch","RngF","SumCheckPolynomial","Verifier","VerifierRoundResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_1","draw","evaluate","fix_variables","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_iter","new","new","new","next","num_vars","num_vars","round","round","set_c_1","to_evaluations","to_string","to_univariate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"sum_check_protocol"],[71,"ark_ff::fields"],[72,"core::option"],[73,"core::fmt"],[74,"ark_poly::polynomial::univariate::sparse"],[75,"core::result"],[76,"alloc::vec"],[77,"alloc::string"],[78,"core::any"]],"i":[0,0,12,12,9,0,9,0,0,0,0,15,3,17,9,12,15,3,17,9,12,3,6,5,5,9,9,12,15,3,17,9,12,15,3,17,9,12,15,15,3,17,15,5,3,3,17,17,5,9,5,15,3,17,9,12,15,3,17,9,12,15,3,17,9,12,15,3,17,9,12],"f":"```````````{{{b{c}}}{{b{e}}}{}{}}0000{{{b{dc}}}{{b{de}}}{}{}}0000{{{b{{f{ce}}}}}ch{{j{c}}}}{{{b{dl}}}c{}}{{{b{j}}{b{{n{c}}}}}{{A`{c}}}h}{{{b{j}}{b{{n{c}}}}}jh}{{{b{Ab}}{b{dAd}}}Af}0{{{b{{Ah{c}}}}{b{dAd}}}Af{Ajh}}{cc{}}0000{ce{}{}}00000{Al{{An{c}}}h}{e{{f{ce}}}h{{j{c}}}}{{B`{A`{e}}}{{Bb{ce}}}h{{j{c}}}}{{{b{d{An{c}}}}}{{A`{e}}}h{}}{{{b{j}}}B`}{{{b{{f{ce}}}}}B`h{{j{c}}}}{{{b{d{f{ce}}}}cB`}{{Bd{c}}}h{{j{c}}}}{{{b{d{Bb{ce}}}}{Bd{c}}{b{dg}}}{{Bf{{Ah{c}}Ab}}}h{{j{c}}}{{l{c}}}}{{{b{d{Bb{ce}}}}c}Bhh{{j{c}}}}{{{b{j}}}{{Bj{c}}}h}{{{b{c}}}Bl{}}{{{b{j}}}{{Bd{c}}}h}{c{{Bf{e}}}{}{}}000000000{{{b{c}}}Bn{}}0000>>>>>","D":"Cj","p":[[1,"reference"],[0,"mut"],[5,"Prover",0],[10,"Field",71],[10,"SumCheckPolynomial",0],[10,"RngF",0],[1,"slice"],[6,"Option",72],[6,"Error",0],[5,"Formatter",73],[8,"Result",73],[6,"VerifierRoundResult",0],[10,"Debug",73],[1,"u32"],[5,"BooleanHypercube",0],[1,"usize"],[5,"Verifier",0],[5,"SparsePolynomial",74],[6,"Result",75],[1,"unit"],[5,"Vec",76],[5,"String",77],[5,"TypeId",78]],"r":[],"b":[[25,"impl-Debug-for-Error"],[26,"impl-Display-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACoADAAAAAAABQAAAAcAAQAMAAkAFwAAABoAAgAnAAAAKwAAAC0AAAAwAAAAMgAAADQAEwA="}],\
["triangle_counting",{"t":"FNNNNNNNNNNNNNNNNNN","n":["G","borrow","borrow_mut","clone","clone_into","clone_to_uninit","evaluate","fix_variables","from","into","new_adj_matrix","num_vars","to_evaluations","to_owned","to_univariate","try_from","try_into","type_id","vzip"],"q":[[0,"triangle_counting"],[19,"core::clone"],[20,"ark_ff::fields"],[21,"core::option"],[22,"ark_ff::fields::fft_friendly"],[23,"core::iter::traits::collect"],[24,"alloc::vec"],[25,"ark_poly::polynomial::univariate::sparse"],[26,"core::result"],[27,"core::any"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":"`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{f{c}}}}}{{f{c}}}{hj}}{{{b{c}}{b{de}}}l{}{}}{{{b{c}}}l{}}{{{b{{f{c}}}}{b{{n{c}}}}}{{A`{c}}}Ab}{{{b{{f{c}}}}{b{{n{c}}}}}{{f{c}}}Ab}{cc{}}{ce{}{}}{{Adc}{{f{e}}}{{Aj{}{{Af{Ah}}}}}j}{{{b{{f{c}}}}}AdAb}{{{b{{f{c}}}}}{{Al{c}}}Ab}{{{b{c}}}e{}{}}{{{b{{f{c}}}}}{{An{c}}}Ab}{c{{B`{e}}}{}{}}0{{{b{c}}}Bb{}}7","D":"h","p":[[1,"reference"],[0,"mut"],[5,"G",0],[10,"Clone",19],[10,"Field",20],[1,"unit"],[1,"slice"],[6,"Option",21],[10,"FftField",22],[1,"usize"],[17,"Item"],[1,"bool"],[10,"IntoIterator",23],[5,"Vec",24],[5,"SparsePolynomial",25],[6,"Result",26],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8AAwAAAAAAAgAGAAwABwA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
