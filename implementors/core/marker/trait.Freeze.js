(function() {var implementors = {
"fiat_shamir":[["impl Freeze for <a class=\"enum\" href=\"fiat_shamir/enum.Error.html\" title=\"enum fiat_shamir::Error\">Error</a>",1,["fiat_shamir::Error"]],["impl Freeze for <a class=\"struct\" href=\"fiat_shamir/struct.FiatShamirTranscript.html\" title=\"struct fiat_shamir::FiatShamirTranscript\">FiatShamirTranscript</a>",1,["fiat_shamir::FiatShamirTranscript"]],["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"fiat_shamir/struct.RandNums.html\" title=\"struct fiat_shamir::RandNums\">RandNums</a>&lt;F&gt;",1,["fiat_shamir::RandNums"]]],
"gkr_protocol":[["impl Freeze for <a class=\"enum\" href=\"gkr_protocol/enum.Error.html\" title=\"enum gkr_protocol::Error\">Error</a>",1,["gkr_protocol::Error"]],["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"gkr_protocol/struct.Verifier.html\" title=\"struct gkr_protocol::Verifier\">Verifier</a>&lt;F&gt;",1,["gkr_protocol::Verifier"]],["impl&lt;F&gt; Freeze for <a class=\"enum\" href=\"gkr_protocol/enum.VerifierMessage.html\" title=\"enum gkr_protocol::VerifierMessage\">VerifierMessage</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,</span>",1,["gkr_protocol::VerifierMessage"]],["impl&lt;F&gt; Freeze for <a class=\"enum\" href=\"gkr_protocol/enum.ProverMessage.html\" title=\"enum gkr_protocol::ProverMessage\">ProverMessage</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,</span>",1,["gkr_protocol::ProverMessage"]],["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"gkr_protocol/struct.Prover.html\" title=\"struct gkr_protocol::Prover\">Prover</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,</span>",1,["gkr_protocol::Prover"]]],
"matrix_multiplication":[["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"matrix_multiplication/struct.G.html\" title=\"struct matrix_multiplication::G\">G</a>&lt;F&gt;",1,["matrix_multiplication::G"]]],
"sum_check_protocol":[["impl Freeze for <a class=\"enum\" href=\"sum_check_protocol/enum.Error.html\" title=\"enum sum_check_protocol::Error\">Error</a>",1,["sum_check_protocol::Error"]],["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"sum_check_protocol/struct.BooleanHypercube.html\" title=\"struct sum_check_protocol::BooleanHypercube\">BooleanHypercube</a>&lt;F&gt;",1,["sum_check_protocol::BooleanHypercube"]],["impl&lt;F, P&gt; Freeze for <a class=\"struct\" href=\"sum_check_protocol/struct.Prover.html\" title=\"struct sum_check_protocol::Prover\">Prover</a>&lt;F, P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["sum_check_protocol::Prover"]],["impl&lt;F, P&gt; Freeze for <a class=\"struct\" href=\"sum_check_protocol/struct.Verifier.html\" title=\"struct sum_check_protocol::Verifier\">Verifier</a>&lt;F, P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["sum_check_protocol::Verifier"]],["impl&lt;F&gt; Freeze for <a class=\"enum\" href=\"sum_check_protocol/enum.VerifierRoundResult.html\" title=\"enum sum_check_protocol::VerifierRoundResult\">VerifierRoundResult</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,</span>",1,["sum_check_protocol::VerifierRoundResult"]]],
"triangle_counting":[["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"triangle_counting/struct.G.html\" title=\"struct triangle_counting::G\">G</a>&lt;F&gt;",1,["triangle_counting::G"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()